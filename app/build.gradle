import com.hi.dhl.plugin.*

android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        applicationId "com.cxj.jetpackmvvm"
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),  //配置并启用架构导出到给定目录中【"$projectDir/schemas".toString()】的json文件功能
                        "room.incremental":"true",  //启用 Gradle 增量注释处理器
                        "room.expandProjection":"true"] //配置 Room 以重写查询 ，设置成false则不需要导出到指定目录json文件
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation Kt.stdlib
    implementation AndroidX.appcompat
    implementation AndroidX.coreKtx
    implementation AndroidX.constraintlayout

    implementation Material.material

    implementation Fragment.navigation_fragment
    implementation Fragment.navigation_ui
    implementation Fragment.navigation_fragment_ktx
    implementation Fragment.navigation_ui_ktx

    implementation Room.runtime
    implementation Room.ktx
    kapt Room.compiler

    implementation Lifecycle.lifecycle

    implementation Coil.coil

    implementation Retrofit.retrofit
    implementation Retrofit.gson
    implementation Retrofit.logging
    implementation Retrofit.persistentCookieJar

    implementation Koin.core
    implementation Koin.viewmodel

    implementation Anko.common

    implementation X5WebView.x5WebView

    implementation Tencent.mmkv
    implementation Tencent.qmui
    implementation Tencent.bugly

    implementation CymChad.adapter

    implementation SmartRefresh.refresh_layout_kernel
    implementation SmartRefresh.refresh_header_classics
    implementation SmartRefresh.refresh_header_material
    implementation SmartRefresh.refresh_footer_classics

    implementation Banner.banner

    implementation Immersion.immersionbar
    implementation Immersion.immersionbar_components
    implementation Immersion.immersionbar_ktx


    testImplementation Depend.junit
    androidTestImplementation Depend.androidTestJunit
    androidTestImplementation Depend.espressoCore

}